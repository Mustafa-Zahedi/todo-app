import Link from "next/link";
import { Metadata } from "next";
import { FaTrash, FaPlus, FaInfo } from "react-icons/fa";
import DeleteButton from "@/components/delete-btn";
import { revalidatePath } from "next/cache";
import { User } from "./actions";
import { cookies } from "next/headers";

export const metadata: Metadata = {
  title: "Users",
  description: "Generated by create next app",
};

const apiUrl =
  process.env.NEXT_PUBLIC_API_ENDPOINT || "http://localhost:4000/api/";

async function getUsers() {
  const res = await fetch(`${apiUrl}/user`, {
    method: "GET",
    next: { revalidate: 10 },
    headers: {
      Authorization: `Bearer ${cookies().get("currentUser")?.value}`,
    },
  });

  if (res.status === 401) {
    // This will activate the closest `error.js` Error Boundary
    throw new Error("Unauthorized");
  }

  if (!res.ok) {
    // This will activate the closest `error.js` Error Boundary
    throw new Error("Failed to fetch data");
  }

  // Recommendation: handle errors manually
  return res.json();
}

async function deleteUser(id: number) {
  const res = await fetch(`${apiUrl}/user/${id}`, {
    method: "DELETE",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${cookies().get("currentUser")?.value}`,
    },
  });

  if (!res.ok) {
    // This will activate the closest `error.js` Error Boundary
    throw new Error("Failed to delete user");
  }

  return res.json();
}

function classNames(...classes: string[]) {
  return classes.filter(Boolean).join(" ");
}

export default async function User() {
  const res = await getUsers();
  // console.log("res: ", JSON.stringify(res, null, 2));

  async function handleDelete(id: number) {
    "use server";
    const res = await deleteUser(id);
    if (res) {
      revalidatePath("/user", "page");
    }
  }

  if (!res) {
    return <div>No data</div>;
  }

  if (res instanceof Error) {
    return <div>{res.message}</div>;
  }

  return (
    <>
      <h1 className="text-2xl font-bold mb-4">Users</h1>
      <Link href={"/user/create"} passHref>
        <button
          className="bg-blue-500 text-white py-2 px-4 mb-4 rounded-md shadow-md flex items-center justify-center mt-4 hover:bg-blue-600 w-full"
          aria-label="Create new user"
        >
          <FaPlus className="mr-2" />
          Add New User
        </button>
      </Link>
      <ul className="mt-3 grid gap-5 ">
        {res.map((user: User) => (
          <li
            key={user.id}
            className="col-span-1 flex rounded-md shadow-lg border-r border-t border-slate-300 dark:border-slate-400"
          >
            <div
              className={classNames(
                user.role === "ADMIN" ? "bg-green-500" : "bg-blue-500",
                "flex w-20 flex-shrink-0 items-center justify-center rounded-l-md text-sm font-medium text-white"
              )}
            >
              {user.role === "USER" ? "User" : "Admin"}
            </div>
            <article className="flex w-full items-center justify-between">
              <div className="flex flex-col px-4">
                <h2 className="font-bold">{user.fullname}</h2>
                <p className="text-gray-600 dark:text-gray-400">{user.email}</p>
              </div>
              <div>
                <Link href={`/user/${user.id}`} passHref>
                  <button
                    className="text-blue-500 dark:text-blue-300 rounded-md p-2 hover:bg-blue-100 dark:hover:bg-blue-900"
                    aria-label="More info"
                  >
                    <FaInfo />
                  </button>
                </Link>
                {/* <Link href={`/user/edit/${user.id}`} passHref>
                  <button
                    className="text-blue-500 dark:text-blue-300 rounded-md p-2 hover:bg-blue-100 dark:hover:bg-blue-900"
                    aria-label="Edit user"
                  >
                    <FaEdit />
                  </button>
                </Link> */}
                <DeleteButton
                  className="text-red-500 dark:text-red-300 rounded-md p-2 hover:bg-red-100 dark:hover:bg-red-900"
                  aria-label="Delete user"
                  handleClick={handleDelete}
                  id={user.id as number}
                >
                  <FaTrash />
                </DeleteButton>
              </div>
            </article>
          </li>
        ))}
      </ul>
    </>
  );
}
